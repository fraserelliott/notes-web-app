var i=(o,r)=>()=>(r||o((r={exports:{}}).exports,r),r.exports);var s=i((B,y)=>{var d=class{constructor(){this.rules=new Map}validate(r){for(let[e,n]of this.rules){if(r===void 0&&e!=="required")continue;let t;try{t=n(r)}catch(a){throw new Error(`Validation function for rule "${e}" threw an error:
${a.message}`)}if(typeof t!="object"||t==null)throw new TypeError(`Validation function for rule "${e}" must return an object.`);if(t.valid==null||typeof t.valid!="boolean")throw new TypeError(`Validation function for rule "${e}" must return an object with a boolean 'valid' property.`);if(!t.valid){if(t.error==null||typeof t.error!="string")throw new TypeError(`Validation function for rule "${e}" must return an object with a string 'error' property when 'valid' is false.`);return t}}return{valid:!0}}validateAll(r){let e=[];for(let[t,a]of this.rules){if(r===void 0&&t!=="required")continue;let l;try{l=a(r)}catch(u){throw new Error(`Validation function for rule "${t}" threw an error: ${u.message}`)}if(typeof l!="object"||l==null)throw new TypeError(`Validation function for rule "${t}" must return an object.`);if(l.valid==null||typeof l.valid!="boolean")throw new TypeError(`Validation function for rule "${t}" must return an object with a boolean 'valid' property.`);if(!l.valid){if(l.error==null||typeof l.error!="string")throw new TypeError(`Validation function for rule "${t}" must return an object with a string 'error' property when 'valid' is false.`);e.push({rule:t,error:l.error})}}let n=e.length===0;return{valid:n,errors:n?void 0:e}}addRule(r,e){if(!r||typeof r!="string")throw new TypeError("Rule name must be a non-empty string.");if(e==null||typeof e!="function")throw new TypeError("Parameter fn must be a function.");if(this.rules.has(r))throw new Error(`Validation rule with name "${r}" already exists.`);return this.rules.set(r,e),this}required(){return this.addRule("required",r=>r!==void 0?{valid:!0}:{valid:!1,error:"is mandatory"})}type(r){return this.addRule("type",e=>typeof e===r?{valid:!0}:{valid:!1,error:`must be of type ${r}`})}nonNull(){return this.addRule("nonNull",r=>r!==null?{valid:!0}:{valid:!1,error:"cannot be null"})}};y.exports=d});var w=i((C,v)=>{var q=s(),f=class extends q{constructor(){super(),this.type("string")}minLength(r){return this.addRule("minLength",e=>e.length>=r?{valid:!0}:{valid:!1,error:`must be at least ${r} characters.`})}maxLength(r){return this.addRule("maxLength",e=>e.length<=r?{valid:!0}:{valid:!1,error:`cannot exceed ${r} characters`})}regex(r){return this.addRule("regex",e=>r.test(e)?{valid:!0}:{valid:!1,error:`does not match the required pattern: ${r}`})}email(){return this.addRule("email",r=>/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(r)?{valid:!0}:{valid:!1,error:"must be a valid email address."})}website(){return this.addRule("website",r=>/^(https?:\/\/)?(www\.)?[a-zA-Z0-9\-]+\.[a-zA-Z]{2,}([\/\w\-.\?%&=]*)?$/.test(r)?{valid:!0}:{valid:!1,error:"must be a valid website address."})}alphanumeric(){return this.addRule("alphanumeric",r=>/^[a-zA-Z0-9]+$/.test(r)?{valid:!0}:{valid:!1,error:"must be alphanumeric."})}};v.exports=f});var b=i((I,m)=>{var F=s(),h=class extends F{constructor(){super(),this.type("boolean")}true(){return this.addRule("true",r=>r?{valid:!0}:{valid:!1,error:"must be true"})}false(){return this.addRule("false",r=>r?{valid:!1,error:"must be false"}:{valid:!0})}};m.exports=h});var $=i((M,g)=>{var k=s(),c=class extends k{constructor(){super(),this.type("number")}min(r){return this.addRule("min",e=>e>=r?{valid:!0}:{valid:!1,error:`must be at least ${r}.`})}greaterThan(r){return this.addRule("greaterThan",e=>e>r?{valid:!0}:{valid:!1,error:`must be greater than ${r}.`})}max(r){return this("max",e=>e<=r?{valid:!0}:{valid:!1,error:`cannot exceed ${r}.`})}lessThan(r){return this.addRule("lessThan",e=>e<r?{valid:!0}:{valid:!1,error:`must be less than ${r}.`})}integer(){return this.addRule("integer",r=>Number.isInteger(r)?{valid:!0}:{valid:!1,error:"must be an integer."})}positive(){return this.addRule("positive",r=>r>0?{valid:!0}:{valid:!1,error:"must be >0."})}unsigned(){return this.addRule("unsigned",r=>r>=0?{valid:!0}:{valid:!1,error:"must be >=0."})}negative(){return this.addRule("negative",r=>r<0?{valid:!0}:{valid:!1,error:"must be negative."})}};g.exports=c});var R=i((P,T)=>{var E=s(),N=w(),L=b(),z=$(),p=class{constructor(){this.fields=new Map}validate(r){if(typeof r!="object"||r===null||Array.isArray(r))throw new TypeError("params parameter must be a non-null object.");for(let[e,n]of this.fields){let t;try{t=n.validate(r[e])}catch(a){throw new Error(`Validator for parameter ${e} threw an error:
${a.message}`)}if(typeof t!="object"||t===null)throw new TypeError(`Validator for parameter "${e}" must return a non-null object.`);if(typeof t.valid!="boolean")throw new TypeError(`Validator for parameter "${e}" must return an object with a boolean 'valid' property.`);if(!t.valid){if(typeof t.error!="string"||t.error.trim()==="")throw new TypeError(`Validator for parameter "${e}" must return a non-empty string 'error' when 'valid' is false.`);return{valid:!1,error:`${e} ${t.error}`}}}return{valid:!0}}validateAll(r){if(typeof r!="object"||r===null||Array.isArray(r))throw new TypeError("params parameter must be a non-null object.");let e={valid:!0};for(let[n,t]of this.fields){let a;try{a=t.validateAll(r[n])}catch(l){throw new Error(`Validator for parameter ${n} threw an error:
${l.message}`)}if(typeof a!="object"||a===null)throw new TypeError(`Validator for parameter "${n}" must return a non-null object.`);if(typeof a.valid!="boolean")throw new TypeError(`Validator for parameter "${n}" must return an object with a boolean 'valid' property.`);if(a.valid)e[n]={valid:!0};else{if(!Array.isArray(a.errors)||a.errors.length===0)throw new TypeError(`Validator for parameter "${n}" must return a non-empty array 'errors' when 'valid' is false.`);for(let l of a.errors)if(typeof l!="object"||typeof l.rule!="string"||typeof l.error!="string")throw new TypeError(`Each error entry in the 'errors' array for "${n}" must be an object with string 'rule' and 'error' properties`);e[n]={valid:!1,errors:a.errors},e.valid=!1}}return e}validateAllWithCallback(r,e,n=null){if(n===null&&(n=this.generateRuleMap()),typeof n!="object"||Array.isArray(n))throw new TypeError("ruleMap parameter must be a non-null object.");if(typeof e!="function")throw new TypeError("callback must be a function.");let t=this.validateAll(r);for(let a in n){let{rules:l,...u}=n[a];if(!Array.isArray(l))throw new TypeError(`Expected rule array for key "${a}".`);let j=l.filter(({field:x,rule:A})=>t[x]?.errors?.some(V=>V.rule===A));e(a,j,u)}}generateRuleMap(){let r={};for(let e of this.fields.keys()){let n=this.fields.get(e);for(let t of n.rules.keys()){let a=`${e}.${t}`;r[a]={rules:[{field:e,rule:t}]}}}return r}add(r,e){if(e==null||!(e instanceof E))throw new TypeError("validator parameter must be a non-null instance of Field or any subclass.");if(typeof r!="string"||!r)throw new TypeError("param parameter must be a non-empty string.");this.fields.set(r,e)}};T.exports={FailSchema:p,Field:E,StringField:N,BooleanField:L,NumberField:z}});var{FailSchema:S,Field:W,NumberField:D,BooleanField:G,StringField:H}=R();export{G as BooleanField,S as FailSchema,W as Field,D as NumberField,H as StringField};
